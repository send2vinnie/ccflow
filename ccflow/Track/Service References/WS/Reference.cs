//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WF.WS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS.WSDesignerSoap")]
    public interface WSDesignerSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GenerOrgModel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGenerOrgModel(System.AsyncCallback callback, object asyncState);
        
        string EndGenerOrgModel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoType(string doType, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState);
        
        string EndDoType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDTOfWorkList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetDTOfWorkList(string fk_flow, string workid, System.AsyncCallback callback, object asyncState);
        
        string EndGetDTOfWorkList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LetAdminLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLetAdminLogin(string lang, bool islogin, System.AsyncCallback callback, object asyncState);
        
        string EndLetAdminLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetFlowBySort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetFlowBySort(string sort, System.AsyncCallback callback, object asyncState);
        
        string EndGetFlowBySort(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetStationEmps", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetStationEmps(System.AsyncCallback callback, object asyncState);
        
        string EndGetStationEmps(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Do", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDo(string doWhat, string para1, bool isLogin, System.AsyncCallback callback, object asyncState);
        
        string EndDo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoNewNode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoNewNode(string fk_flow, int x, int y, string nodeName, bool isLogin, System.AsyncCallback callback, object asyncState);
        
        int EndDoNewNode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoDropLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoDropLine(int from, int to, System.AsyncCallback callback, object asyncState);
        
        bool EndDoDropLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoNewLabel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoNewLabel(string fk_flow, int x, int y, string name, string lableId, System.AsyncCallback callback, object asyncState);
        
        string EndDoNewLabel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FlowTemplete_Load", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFlowTemplete_Load(string fk_flowSort, string path, bool islogin, System.AsyncCallback callback, object asyncState);
        
        string EndFlowTemplete_Load(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDirection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetDirection(string flowid, System.AsyncCallback callback, object asyncState);
        
        string EndGetDirection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetLables(string flowid, System.AsyncCallback callback, object asyncState);
        
        string EndGetLables(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoSaveFlow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoSaveFlow(string fk_flow, string nodes, string dirs, string labes, System.AsyncCallback callback, object asyncState);
        
        string EndDoSaveFlow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Uploadfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUploadfile(WF.WS.UploadfileRequest request, System.AsyncCallback callback, object asyncState);
        
        WF.WS.UploadfileResponse EndUploadfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UploadfileCCForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUploadfileCCForm(WF.WS.UploadfileCCFormRequest request, System.AsyncCallback callback, object asyncState);
        
        WF.WS.UploadfileCCFormResponse EndUploadfileCCForm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CfgKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCfgKey(string kev, System.AsyncCallback callback, object asyncState);
        
        string EndCfgKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUploadFile1(WF.WS.UploadFileRequest1 request, System.AsyncCallback callback, object asyncState);
        
        WF.WS.UploadFileResponse1 EndUploadFile1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLs(string sqls, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQLs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnString(string sql, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnValInt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnValInt(string sql, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQLReturnValInt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnValFloat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnValFloat(string sql, System.AsyncCallback callback, object asyncState);
        
        float EndRunSQLReturnValFloat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTableS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTableS(string sqls, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnTableS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ParseStringToPinyin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginParseStringToPinyin(string name, System.AsyncCallback callback, object asyncState);
        
        string EndParseStringToPinyin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RequestSFTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRequestSFTable(string ensName, System.AsyncCallback callback, object asyncState);
        
        string EndRequestSFTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveEnum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEnum(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Uploadfile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadfileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        public UploadfileRequest() {
        }
        
        public UploadfileRequest(byte[] FileByte, string fileName) {
            this.FileByte = FileByte;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadfileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadfileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadfileResult;
        
        public UploadfileResponse() {
        }
        
        public UploadfileResponse(string UploadfileResult) {
            this.UploadfileResult = UploadfileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadfileCCForm", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadfileCCFormRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fk_frmSort;
        
        public UploadfileCCFormRequest() {
        }
        
        public UploadfileCCFormRequest(byte[] FileByte, string fileName, string fk_frmSort) {
            this.FileByte = FileByte;
            this.fileName = fileName;
            this.fk_frmSort = fk_frmSort;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadfileCCFormResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadfileCCFormResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadfileCCFormResult;
        
        public UploadfileCCFormResponse() {
        }
        
        public UploadfileCCFormResponse(string UploadfileCCFormResult) {
            this.UploadfileCCFormResult = UploadfileCCFormResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        public UploadFileRequest1() {
        }
        
        public UploadFileRequest1(byte[] FileByte, string fileName) {
            this.FileByte = FileByte;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadFileResult;
        
        public UploadFileResponse1() {
        }
        
        public UploadFileResponse1(string UploadFileResult) {
            this.UploadFileResult = UploadFileResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSDesignerSoapChannel : WF.WS.WSDesignerSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerOrgModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerOrgModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDTOfWorkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDTOfWorkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LetAdminLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LetAdminLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowBySortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowBySortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStationEmpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStationEmpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoNewNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoNewNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoDropLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoDropLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoNewLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoNewLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowTemplete_LoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlowTemplete_LoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDirectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDirectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoSaveFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoSaveFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadfileCCFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadfileCCFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CfgKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CfgKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFile1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFile1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnValIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnValIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnValFloatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnValFloatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public float Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseStringToPinyinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseStringToPinyinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestSFTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestSFTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEnumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEnumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSDesignerSoapClient : System.ServiceModel.ClientBase<WF.WS.WSDesignerSoap>, WF.WS.WSDesignerSoap {
        
        private BeginOperationDelegate onBeginGenerOrgModelDelegate;
        
        private EndOperationDelegate onEndGenerOrgModelDelegate;
        
        private System.Threading.SendOrPostCallback onGenerOrgModelCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoTypeDelegate;
        
        private EndOperationDelegate onEndDoTypeDelegate;
        
        private System.Threading.SendOrPostCallback onDoTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDTOfWorkListDelegate;
        
        private EndOperationDelegate onEndGetDTOfWorkListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDTOfWorkListCompletedDelegate;
        
        private BeginOperationDelegate onBeginLetAdminLoginDelegate;
        
        private EndOperationDelegate onEndLetAdminLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLetAdminLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowBySortDelegate;
        
        private EndOperationDelegate onEndGetFlowBySortDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowBySortCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStationEmpsDelegate;
        
        private EndOperationDelegate onEndGetStationEmpsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStationEmpsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoDelegate;
        
        private EndOperationDelegate onEndDoDelegate;
        
        private System.Threading.SendOrPostCallback onDoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoNewNodeDelegate;
        
        private EndOperationDelegate onEndDoNewNodeDelegate;
        
        private System.Threading.SendOrPostCallback onDoNewNodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoDropLineDelegate;
        
        private EndOperationDelegate onEndDoDropLineDelegate;
        
        private System.Threading.SendOrPostCallback onDoDropLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoNewLabelDelegate;
        
        private EndOperationDelegate onEndDoNewLabelDelegate;
        
        private System.Threading.SendOrPostCallback onDoNewLabelCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlowTemplete_LoadDelegate;
        
        private EndOperationDelegate onEndFlowTemplete_LoadDelegate;
        
        private System.Threading.SendOrPostCallback onFlowTemplete_LoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDirectionDelegate;
        
        private EndOperationDelegate onEndGetDirectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDirectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLablesDelegate;
        
        private EndOperationDelegate onEndGetLablesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLablesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoSaveFlowDelegate;
        
        private EndOperationDelegate onEndDoSaveFlowDelegate;
        
        private System.Threading.SendOrPostCallback onDoSaveFlowCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadfileDelegate;
        
        private EndOperationDelegate onEndUploadfileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadfileCCFormDelegate;
        
        private EndOperationDelegate onEndUploadfileCCFormDelegate;
        
        private System.Threading.SendOrPostCallback onUploadfileCCFormCompletedDelegate;
        
        private BeginOperationDelegate onBeginCfgKeyDelegate;
        
        private EndOperationDelegate onEndCfgKeyDelegate;
        
        private System.Threading.SendOrPostCallback onCfgKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFile1Delegate;
        
        private EndOperationDelegate onEndUploadFile1Delegate;
        
        private System.Threading.SendOrPostCallback onUploadFile1CompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLDelegate;
        
        private EndOperationDelegate onEndRunSQLDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLsDelegate;
        
        private EndOperationDelegate onEndRunSQLsDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnDelegate;
        
        private EndOperationDelegate onEndSaveEnDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnStringDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnStringDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnValIntDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnValIntDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnValIntCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnValFloatDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnValFloatDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnValFloatCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableSDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableSDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableSCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseStringToPinyinDelegate;
        
        private EndOperationDelegate onEndParseStringToPinyinDelegate;
        
        private System.Threading.SendOrPostCallback onParseStringToPinyinCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestSFTableDelegate;
        
        private EndOperationDelegate onEndRequestSFTableDelegate;
        
        private System.Threading.SendOrPostCallback onRequestSFTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEnumDelegate;
        
        private EndOperationDelegate onEndSaveEnumDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEnumCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WSDesignerSoapClient() {
        }
        
        public WSDesignerSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSDesignerSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSDesignerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSDesignerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GenerOrgModelCompletedEventArgs> GenerOrgModelCompleted;
        
        public event System.EventHandler<DoTypeCompletedEventArgs> DoTypeCompleted;
        
        public event System.EventHandler<GetDTOfWorkListCompletedEventArgs> GetDTOfWorkListCompleted;
        
        public event System.EventHandler<LetAdminLoginCompletedEventArgs> LetAdminLoginCompleted;
        
        public event System.EventHandler<GetFlowBySortCompletedEventArgs> GetFlowBySortCompleted;
        
        public event System.EventHandler<GetStationEmpsCompletedEventArgs> GetStationEmpsCompleted;
        
        public event System.EventHandler<DoCompletedEventArgs> DoCompleted;
        
        public event System.EventHandler<DoNewNodeCompletedEventArgs> DoNewNodeCompleted;
        
        public event System.EventHandler<DoDropLineCompletedEventArgs> DoDropLineCompleted;
        
        public event System.EventHandler<DoNewLabelCompletedEventArgs> DoNewLabelCompleted;
        
        public event System.EventHandler<FlowTemplete_LoadCompletedEventArgs> FlowTemplete_LoadCompleted;
        
        public event System.EventHandler<GetDirectionCompletedEventArgs> GetDirectionCompleted;
        
        public event System.EventHandler<GetLablesCompletedEventArgs> GetLablesCompleted;
        
        public event System.EventHandler<DoSaveFlowCompletedEventArgs> DoSaveFlowCompleted;
        
        public event System.EventHandler<UploadfileCompletedEventArgs> UploadfileCompleted;
        
        public event System.EventHandler<UploadfileCCFormCompletedEventArgs> UploadfileCCFormCompleted;
        
        public event System.EventHandler<CfgKeyCompletedEventArgs> CfgKeyCompleted;
        
        public event System.EventHandler<UploadFile1CompletedEventArgs> UploadFile1Completed;
        
        public event System.EventHandler<RunSQLCompletedEventArgs> RunSQLCompleted;
        
        public event System.EventHandler<RunSQLsCompletedEventArgs> RunSQLsCompleted;
        
        public event System.EventHandler<SaveEnCompletedEventArgs> SaveEnCompleted;
        
        public event System.EventHandler<RunSQLReturnTableCompletedEventArgs> RunSQLReturnTableCompleted;
        
        public event System.EventHandler<RunSQLReturnStringCompletedEventArgs> RunSQLReturnStringCompleted;
        
        public event System.EventHandler<RunSQLReturnValIntCompletedEventArgs> RunSQLReturnValIntCompleted;
        
        public event System.EventHandler<RunSQLReturnValFloatCompletedEventArgs> RunSQLReturnValFloatCompleted;
        
        public event System.EventHandler<RunSQLReturnTableSCompletedEventArgs> RunSQLReturnTableSCompleted;
        
        public event System.EventHandler<ParseStringToPinyinCompletedEventArgs> ParseStringToPinyinCompleted;
        
        public event System.EventHandler<RequestSFTableCompletedEventArgs> RequestSFTableCompleted;
        
        public event System.EventHandler<SaveEnumCompletedEventArgs> SaveEnumCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginGenerOrgModel(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerOrgModel(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndGenerOrgModel(System.IAsyncResult result) {
            return base.Channel.EndGenerOrgModel(result);
        }
        
        private System.IAsyncResult OnBeginGenerOrgModel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WF.WS.WSDesignerSoap)(this)).BeginGenerOrgModel(callback, asyncState);
        }
        
        private object[] OnEndGenerOrgModel(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndGenerOrgModel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerOrgModelCompleted(object state) {
            if ((this.GenerOrgModelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerOrgModelCompleted(this, new GenerOrgModelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerOrgModelAsync() {
            this.GenerOrgModelAsync(null);
        }
        
        public void GenerOrgModelAsync(object userState) {
            if ((this.onBeginGenerOrgModelDelegate == null)) {
                this.onBeginGenerOrgModelDelegate = new BeginOperationDelegate(this.OnBeginGenerOrgModel);
            }
            if ((this.onEndGenerOrgModelDelegate == null)) {
                this.onEndGenerOrgModelDelegate = new EndOperationDelegate(this.OnEndGenerOrgModel);
            }
            if ((this.onGenerOrgModelCompletedDelegate == null)) {
                this.onGenerOrgModelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerOrgModelCompleted);
            }
            base.InvokeAsync(this.onBeginGenerOrgModelDelegate, null, this.onEndGenerOrgModelDelegate, this.onGenerOrgModelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginDoType(string doType, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoType(doType, v1, v2, v3, v4, v5, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndDoType(System.IAsyncResult result) {
            return base.Channel.EndDoType(result);
        }
        
        private System.IAsyncResult OnBeginDoType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string doType = ((string)(inValues[0]));
            string v1 = ((string)(inValues[1]));
            string v2 = ((string)(inValues[2]));
            string v3 = ((string)(inValues[3]));
            string v4 = ((string)(inValues[4]));
            string v5 = ((string)(inValues[5]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginDoType(doType, v1, v2, v3, v4, v5, callback, asyncState);
        }
        
        private object[] OnEndDoType(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndDoType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoTypeCompleted(object state) {
            if ((this.DoTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoTypeCompleted(this, new DoTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoTypeAsync(string doType, string v1, string v2, string v3, string v4, string v5) {
            this.DoTypeAsync(doType, v1, v2, v3, v4, v5, null);
        }
        
        public void DoTypeAsync(string doType, string v1, string v2, string v3, string v4, string v5, object userState) {
            if ((this.onBeginDoTypeDelegate == null)) {
                this.onBeginDoTypeDelegate = new BeginOperationDelegate(this.OnBeginDoType);
            }
            if ((this.onEndDoTypeDelegate == null)) {
                this.onEndDoTypeDelegate = new EndOperationDelegate(this.OnEndDoType);
            }
            if ((this.onDoTypeCompletedDelegate == null)) {
                this.onDoTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoTypeCompleted);
            }
            base.InvokeAsync(this.onBeginDoTypeDelegate, new object[] {
                        doType,
                        v1,
                        v2,
                        v3,
                        v4,
                        v5}, this.onEndDoTypeDelegate, this.onDoTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginGetDTOfWorkList(string fk_flow, string workid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDTOfWorkList(fk_flow, workid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndGetDTOfWorkList(System.IAsyncResult result) {
            return base.Channel.EndGetDTOfWorkList(result);
        }
        
        private System.IAsyncResult OnBeginGetDTOfWorkList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            string workid = ((string)(inValues[1]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginGetDTOfWorkList(fk_flow, workid, callback, asyncState);
        }
        
        private object[] OnEndGetDTOfWorkList(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndGetDTOfWorkList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDTOfWorkListCompleted(object state) {
            if ((this.GetDTOfWorkListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDTOfWorkListCompleted(this, new GetDTOfWorkListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDTOfWorkListAsync(string fk_flow, string workid) {
            this.GetDTOfWorkListAsync(fk_flow, workid, null);
        }
        
        public void GetDTOfWorkListAsync(string fk_flow, string workid, object userState) {
            if ((this.onBeginGetDTOfWorkListDelegate == null)) {
                this.onBeginGetDTOfWorkListDelegate = new BeginOperationDelegate(this.OnBeginGetDTOfWorkList);
            }
            if ((this.onEndGetDTOfWorkListDelegate == null)) {
                this.onEndGetDTOfWorkListDelegate = new EndOperationDelegate(this.OnEndGetDTOfWorkList);
            }
            if ((this.onGetDTOfWorkListCompletedDelegate == null)) {
                this.onGetDTOfWorkListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDTOfWorkListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDTOfWorkListDelegate, new object[] {
                        fk_flow,
                        workid}, this.onEndGetDTOfWorkListDelegate, this.onGetDTOfWorkListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginLetAdminLogin(string lang, bool islogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLetAdminLogin(lang, islogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndLetAdminLogin(System.IAsyncResult result) {
            return base.Channel.EndLetAdminLogin(result);
        }
        
        private System.IAsyncResult OnBeginLetAdminLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lang = ((string)(inValues[0]));
            bool islogin = ((bool)(inValues[1]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginLetAdminLogin(lang, islogin, callback, asyncState);
        }
        
        private object[] OnEndLetAdminLogin(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndLetAdminLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLetAdminLoginCompleted(object state) {
            if ((this.LetAdminLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LetAdminLoginCompleted(this, new LetAdminLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LetAdminLoginAsync(string lang, bool islogin) {
            this.LetAdminLoginAsync(lang, islogin, null);
        }
        
        public void LetAdminLoginAsync(string lang, bool islogin, object userState) {
            if ((this.onBeginLetAdminLoginDelegate == null)) {
                this.onBeginLetAdminLoginDelegate = new BeginOperationDelegate(this.OnBeginLetAdminLogin);
            }
            if ((this.onEndLetAdminLoginDelegate == null)) {
                this.onEndLetAdminLoginDelegate = new EndOperationDelegate(this.OnEndLetAdminLogin);
            }
            if ((this.onLetAdminLoginCompletedDelegate == null)) {
                this.onLetAdminLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLetAdminLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLetAdminLoginDelegate, new object[] {
                        lang,
                        islogin}, this.onEndLetAdminLoginDelegate, this.onLetAdminLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginGetFlowBySort(string sort, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowBySort(sort, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndGetFlowBySort(System.IAsyncResult result) {
            return base.Channel.EndGetFlowBySort(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowBySort(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sort = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginGetFlowBySort(sort, callback, asyncState);
        }
        
        private object[] OnEndGetFlowBySort(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndGetFlowBySort(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowBySortCompleted(object state) {
            if ((this.GetFlowBySortCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowBySortCompleted(this, new GetFlowBySortCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowBySortAsync(string sort) {
            this.GetFlowBySortAsync(sort, null);
        }
        
        public void GetFlowBySortAsync(string sort, object userState) {
            if ((this.onBeginGetFlowBySortDelegate == null)) {
                this.onBeginGetFlowBySortDelegate = new BeginOperationDelegate(this.OnBeginGetFlowBySort);
            }
            if ((this.onEndGetFlowBySortDelegate == null)) {
                this.onEndGetFlowBySortDelegate = new EndOperationDelegate(this.OnEndGetFlowBySort);
            }
            if ((this.onGetFlowBySortCompletedDelegate == null)) {
                this.onGetFlowBySortCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowBySortCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowBySortDelegate, new object[] {
                        sort}, this.onEndGetFlowBySortDelegate, this.onGetFlowBySortCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginGetStationEmps(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStationEmps(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndGetStationEmps(System.IAsyncResult result) {
            return base.Channel.EndGetStationEmps(result);
        }
        
        private System.IAsyncResult OnBeginGetStationEmps(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WF.WS.WSDesignerSoap)(this)).BeginGetStationEmps(callback, asyncState);
        }
        
        private object[] OnEndGetStationEmps(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndGetStationEmps(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStationEmpsCompleted(object state) {
            if ((this.GetStationEmpsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStationEmpsCompleted(this, new GetStationEmpsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStationEmpsAsync() {
            this.GetStationEmpsAsync(null);
        }
        
        public void GetStationEmpsAsync(object userState) {
            if ((this.onBeginGetStationEmpsDelegate == null)) {
                this.onBeginGetStationEmpsDelegate = new BeginOperationDelegate(this.OnBeginGetStationEmps);
            }
            if ((this.onEndGetStationEmpsDelegate == null)) {
                this.onEndGetStationEmpsDelegate = new EndOperationDelegate(this.OnEndGetStationEmps);
            }
            if ((this.onGetStationEmpsCompletedDelegate == null)) {
                this.onGetStationEmpsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStationEmpsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStationEmpsDelegate, null, this.onEndGetStationEmpsDelegate, this.onGetStationEmpsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginDo(string doWhat, string para1, bool isLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDo(doWhat, para1, isLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndDo(System.IAsyncResult result) {
            return base.Channel.EndDo(result);
        }
        
        private System.IAsyncResult OnBeginDo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string doWhat = ((string)(inValues[0]));
            string para1 = ((string)(inValues[1]));
            bool isLogin = ((bool)(inValues[2]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginDo(doWhat, para1, isLogin, callback, asyncState);
        }
        
        private object[] OnEndDo(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndDo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoCompleted(object state) {
            if ((this.DoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoCompleted(this, new DoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoAsync(string doWhat, string para1, bool isLogin) {
            this.DoAsync(doWhat, para1, isLogin, null);
        }
        
        public void DoAsync(string doWhat, string para1, bool isLogin, object userState) {
            if ((this.onBeginDoDelegate == null)) {
                this.onBeginDoDelegate = new BeginOperationDelegate(this.OnBeginDo);
            }
            if ((this.onEndDoDelegate == null)) {
                this.onEndDoDelegate = new EndOperationDelegate(this.OnEndDo);
            }
            if ((this.onDoCompletedDelegate == null)) {
                this.onDoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoCompleted);
            }
            base.InvokeAsync(this.onBeginDoDelegate, new object[] {
                        doWhat,
                        para1,
                        isLogin}, this.onEndDoDelegate, this.onDoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginDoNewNode(string fk_flow, int x, int y, string nodeName, bool isLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoNewNode(fk_flow, x, y, nodeName, isLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WF.WS.WSDesignerSoap.EndDoNewNode(System.IAsyncResult result) {
            return base.Channel.EndDoNewNode(result);
        }
        
        private System.IAsyncResult OnBeginDoNewNode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int x = ((int)(inValues[1]));
            int y = ((int)(inValues[2]));
            string nodeName = ((string)(inValues[3]));
            bool isLogin = ((bool)(inValues[4]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginDoNewNode(fk_flow, x, y, nodeName, isLogin, callback, asyncState);
        }
        
        private object[] OnEndDoNewNode(System.IAsyncResult result) {
            int retVal = ((WF.WS.WSDesignerSoap)(this)).EndDoNewNode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoNewNodeCompleted(object state) {
            if ((this.DoNewNodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoNewNodeCompleted(this, new DoNewNodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoNewNodeAsync(string fk_flow, int x, int y, string nodeName, bool isLogin) {
            this.DoNewNodeAsync(fk_flow, x, y, nodeName, isLogin, null);
        }
        
        public void DoNewNodeAsync(string fk_flow, int x, int y, string nodeName, bool isLogin, object userState) {
            if ((this.onBeginDoNewNodeDelegate == null)) {
                this.onBeginDoNewNodeDelegate = new BeginOperationDelegate(this.OnBeginDoNewNode);
            }
            if ((this.onEndDoNewNodeDelegate == null)) {
                this.onEndDoNewNodeDelegate = new EndOperationDelegate(this.OnEndDoNewNode);
            }
            if ((this.onDoNewNodeCompletedDelegate == null)) {
                this.onDoNewNodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoNewNodeCompleted);
            }
            base.InvokeAsync(this.onBeginDoNewNodeDelegate, new object[] {
                        fk_flow,
                        x,
                        y,
                        nodeName,
                        isLogin}, this.onEndDoNewNodeDelegate, this.onDoNewNodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginDoDropLine(int from, int to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoDropLine(from, to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WF.WS.WSDesignerSoap.EndDoDropLine(System.IAsyncResult result) {
            return base.Channel.EndDoDropLine(result);
        }
        
        private System.IAsyncResult OnBeginDoDropLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int from = ((int)(inValues[0]));
            int to = ((int)(inValues[1]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginDoDropLine(from, to, callback, asyncState);
        }
        
        private object[] OnEndDoDropLine(System.IAsyncResult result) {
            bool retVal = ((WF.WS.WSDesignerSoap)(this)).EndDoDropLine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoDropLineCompleted(object state) {
            if ((this.DoDropLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoDropLineCompleted(this, new DoDropLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoDropLineAsync(int from, int to) {
            this.DoDropLineAsync(from, to, null);
        }
        
        public void DoDropLineAsync(int from, int to, object userState) {
            if ((this.onBeginDoDropLineDelegate == null)) {
                this.onBeginDoDropLineDelegate = new BeginOperationDelegate(this.OnBeginDoDropLine);
            }
            if ((this.onEndDoDropLineDelegate == null)) {
                this.onEndDoDropLineDelegate = new EndOperationDelegate(this.OnEndDoDropLine);
            }
            if ((this.onDoDropLineCompletedDelegate == null)) {
                this.onDoDropLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoDropLineCompleted);
            }
            base.InvokeAsync(this.onBeginDoDropLineDelegate, new object[] {
                        from,
                        to}, this.onEndDoDropLineDelegate, this.onDoDropLineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginDoNewLabel(string fk_flow, int x, int y, string name, string lableId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoNewLabel(fk_flow, x, y, name, lableId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndDoNewLabel(System.IAsyncResult result) {
            return base.Channel.EndDoNewLabel(result);
        }
        
        private System.IAsyncResult OnBeginDoNewLabel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int x = ((int)(inValues[1]));
            int y = ((int)(inValues[2]));
            string name = ((string)(inValues[3]));
            string lableId = ((string)(inValues[4]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginDoNewLabel(fk_flow, x, y, name, lableId, callback, asyncState);
        }
        
        private object[] OnEndDoNewLabel(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndDoNewLabel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoNewLabelCompleted(object state) {
            if ((this.DoNewLabelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoNewLabelCompleted(this, new DoNewLabelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoNewLabelAsync(string fk_flow, int x, int y, string name, string lableId) {
            this.DoNewLabelAsync(fk_flow, x, y, name, lableId, null);
        }
        
        public void DoNewLabelAsync(string fk_flow, int x, int y, string name, string lableId, object userState) {
            if ((this.onBeginDoNewLabelDelegate == null)) {
                this.onBeginDoNewLabelDelegate = new BeginOperationDelegate(this.OnBeginDoNewLabel);
            }
            if ((this.onEndDoNewLabelDelegate == null)) {
                this.onEndDoNewLabelDelegate = new EndOperationDelegate(this.OnEndDoNewLabel);
            }
            if ((this.onDoNewLabelCompletedDelegate == null)) {
                this.onDoNewLabelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoNewLabelCompleted);
            }
            base.InvokeAsync(this.onBeginDoNewLabelDelegate, new object[] {
                        fk_flow,
                        x,
                        y,
                        name,
                        lableId}, this.onEndDoNewLabelDelegate, this.onDoNewLabelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginFlowTemplete_Load(string fk_flowSort, string path, bool islogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlowTemplete_Load(fk_flowSort, path, islogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndFlowTemplete_Load(System.IAsyncResult result) {
            return base.Channel.EndFlowTemplete_Load(result);
        }
        
        private System.IAsyncResult OnBeginFlowTemplete_Load(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flowSort = ((string)(inValues[0]));
            string path = ((string)(inValues[1]));
            bool islogin = ((bool)(inValues[2]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginFlowTemplete_Load(fk_flowSort, path, islogin, callback, asyncState);
        }
        
        private object[] OnEndFlowTemplete_Load(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndFlowTemplete_Load(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlowTemplete_LoadCompleted(object state) {
            if ((this.FlowTemplete_LoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlowTemplete_LoadCompleted(this, new FlowTemplete_LoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlowTemplete_LoadAsync(string fk_flowSort, string path, bool islogin) {
            this.FlowTemplete_LoadAsync(fk_flowSort, path, islogin, null);
        }
        
        public void FlowTemplete_LoadAsync(string fk_flowSort, string path, bool islogin, object userState) {
            if ((this.onBeginFlowTemplete_LoadDelegate == null)) {
                this.onBeginFlowTemplete_LoadDelegate = new BeginOperationDelegate(this.OnBeginFlowTemplete_Load);
            }
            if ((this.onEndFlowTemplete_LoadDelegate == null)) {
                this.onEndFlowTemplete_LoadDelegate = new EndOperationDelegate(this.OnEndFlowTemplete_Load);
            }
            if ((this.onFlowTemplete_LoadCompletedDelegate == null)) {
                this.onFlowTemplete_LoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlowTemplete_LoadCompleted);
            }
            base.InvokeAsync(this.onBeginFlowTemplete_LoadDelegate, new object[] {
                        fk_flowSort,
                        path,
                        islogin}, this.onEndFlowTemplete_LoadDelegate, this.onFlowTemplete_LoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginGetDirection(string flowid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDirection(flowid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndGetDirection(System.IAsyncResult result) {
            return base.Channel.EndGetDirection(result);
        }
        
        private System.IAsyncResult OnBeginGetDirection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flowid = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginGetDirection(flowid, callback, asyncState);
        }
        
        private object[] OnEndGetDirection(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndGetDirection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDirectionCompleted(object state) {
            if ((this.GetDirectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDirectionCompleted(this, new GetDirectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDirectionAsync(string flowid) {
            this.GetDirectionAsync(flowid, null);
        }
        
        public void GetDirectionAsync(string flowid, object userState) {
            if ((this.onBeginGetDirectionDelegate == null)) {
                this.onBeginGetDirectionDelegate = new BeginOperationDelegate(this.OnBeginGetDirection);
            }
            if ((this.onEndGetDirectionDelegate == null)) {
                this.onEndGetDirectionDelegate = new EndOperationDelegate(this.OnEndGetDirection);
            }
            if ((this.onGetDirectionCompletedDelegate == null)) {
                this.onGetDirectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDirectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDirectionDelegate, new object[] {
                        flowid}, this.onEndGetDirectionDelegate, this.onGetDirectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginGetLables(string flowid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLables(flowid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndGetLables(System.IAsyncResult result) {
            return base.Channel.EndGetLables(result);
        }
        
        private System.IAsyncResult OnBeginGetLables(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flowid = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginGetLables(flowid, callback, asyncState);
        }
        
        private object[] OnEndGetLables(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndGetLables(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLablesCompleted(object state) {
            if ((this.GetLablesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLablesCompleted(this, new GetLablesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLablesAsync(string flowid) {
            this.GetLablesAsync(flowid, null);
        }
        
        public void GetLablesAsync(string flowid, object userState) {
            if ((this.onBeginGetLablesDelegate == null)) {
                this.onBeginGetLablesDelegate = new BeginOperationDelegate(this.OnBeginGetLables);
            }
            if ((this.onEndGetLablesDelegate == null)) {
                this.onEndGetLablesDelegate = new EndOperationDelegate(this.OnEndGetLables);
            }
            if ((this.onGetLablesCompletedDelegate == null)) {
                this.onGetLablesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLablesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLablesDelegate, new object[] {
                        flowid}, this.onEndGetLablesDelegate, this.onGetLablesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginDoSaveFlow(string fk_flow, string nodes, string dirs, string labes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoSaveFlow(fk_flow, nodes, dirs, labes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndDoSaveFlow(System.IAsyncResult result) {
            return base.Channel.EndDoSaveFlow(result);
        }
        
        private System.IAsyncResult OnBeginDoSaveFlow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            string nodes = ((string)(inValues[1]));
            string dirs = ((string)(inValues[2]));
            string labes = ((string)(inValues[3]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginDoSaveFlow(fk_flow, nodes, dirs, labes, callback, asyncState);
        }
        
        private object[] OnEndDoSaveFlow(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndDoSaveFlow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoSaveFlowCompleted(object state) {
            if ((this.DoSaveFlowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoSaveFlowCompleted(this, new DoSaveFlowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoSaveFlowAsync(string fk_flow, string nodes, string dirs, string labes) {
            this.DoSaveFlowAsync(fk_flow, nodes, dirs, labes, null);
        }
        
        public void DoSaveFlowAsync(string fk_flow, string nodes, string dirs, string labes, object userState) {
            if ((this.onBeginDoSaveFlowDelegate == null)) {
                this.onBeginDoSaveFlowDelegate = new BeginOperationDelegate(this.OnBeginDoSaveFlow);
            }
            if ((this.onEndDoSaveFlowDelegate == null)) {
                this.onEndDoSaveFlowDelegate = new EndOperationDelegate(this.OnEndDoSaveFlow);
            }
            if ((this.onDoSaveFlowCompletedDelegate == null)) {
                this.onDoSaveFlowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoSaveFlowCompleted);
            }
            base.InvokeAsync(this.onBeginDoSaveFlowDelegate, new object[] {
                        fk_flow,
                        nodes,
                        dirs,
                        labes}, this.onEndDoSaveFlowDelegate, this.onDoSaveFlowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginUploadfile(WF.WS.UploadfileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadfile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadfile(byte[] FileByte, string fileName, System.AsyncCallback callback, object asyncState) {
            WF.WS.UploadfileRequest inValue = new WF.WS.UploadfileRequest();
            inValue.FileByte = FileByte;
            inValue.fileName = fileName;
            return ((WF.WS.WSDesignerSoap)(this)).BeginUploadfile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WF.WS.UploadfileResponse WF.WS.WSDesignerSoap.EndUploadfile(System.IAsyncResult result) {
            return base.Channel.EndUploadfile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadfile(System.IAsyncResult result) {
            WF.WS.UploadfileResponse retVal = ((WF.WS.WSDesignerSoap)(this)).EndUploadfile(result);
            return retVal.UploadfileResult;
        }
        
        private System.IAsyncResult OnBeginUploadfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileByte = ((byte[])(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return this.BeginUploadfile(FileByte, fileName, callback, asyncState);
        }
        
        private object[] OnEndUploadfile(System.IAsyncResult result) {
            string retVal = this.EndUploadfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadfileCompleted(object state) {
            if ((this.UploadfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadfileCompleted(this, new UploadfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadfileAsync(byte[] FileByte, string fileName) {
            this.UploadfileAsync(FileByte, fileName, null);
        }
        
        public void UploadfileAsync(byte[] FileByte, string fileName, object userState) {
            if ((this.onBeginUploadfileDelegate == null)) {
                this.onBeginUploadfileDelegate = new BeginOperationDelegate(this.OnBeginUploadfile);
            }
            if ((this.onEndUploadfileDelegate == null)) {
                this.onEndUploadfileDelegate = new EndOperationDelegate(this.OnEndUploadfile);
            }
            if ((this.onUploadfileCompletedDelegate == null)) {
                this.onUploadfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadfileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadfileDelegate, new object[] {
                        FileByte,
                        fileName}, this.onEndUploadfileDelegate, this.onUploadfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginUploadfileCCForm(WF.WS.UploadfileCCFormRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadfileCCForm(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadfileCCForm(byte[] FileByte, string fileName, string fk_frmSort, System.AsyncCallback callback, object asyncState) {
            WF.WS.UploadfileCCFormRequest inValue = new WF.WS.UploadfileCCFormRequest();
            inValue.FileByte = FileByte;
            inValue.fileName = fileName;
            inValue.fk_frmSort = fk_frmSort;
            return ((WF.WS.WSDesignerSoap)(this)).BeginUploadfileCCForm(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WF.WS.UploadfileCCFormResponse WF.WS.WSDesignerSoap.EndUploadfileCCForm(System.IAsyncResult result) {
            return base.Channel.EndUploadfileCCForm(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadfileCCForm(System.IAsyncResult result) {
            WF.WS.UploadfileCCFormResponse retVal = ((WF.WS.WSDesignerSoap)(this)).EndUploadfileCCForm(result);
            return retVal.UploadfileCCFormResult;
        }
        
        private System.IAsyncResult OnBeginUploadfileCCForm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileByte = ((byte[])(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string fk_frmSort = ((string)(inValues[2]));
            return this.BeginUploadfileCCForm(FileByte, fileName, fk_frmSort, callback, asyncState);
        }
        
        private object[] OnEndUploadfileCCForm(System.IAsyncResult result) {
            string retVal = this.EndUploadfileCCForm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadfileCCFormCompleted(object state) {
            if ((this.UploadfileCCFormCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadfileCCFormCompleted(this, new UploadfileCCFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadfileCCFormAsync(byte[] FileByte, string fileName, string fk_frmSort) {
            this.UploadfileCCFormAsync(FileByte, fileName, fk_frmSort, null);
        }
        
        public void UploadfileCCFormAsync(byte[] FileByte, string fileName, string fk_frmSort, object userState) {
            if ((this.onBeginUploadfileCCFormDelegate == null)) {
                this.onBeginUploadfileCCFormDelegate = new BeginOperationDelegate(this.OnBeginUploadfileCCForm);
            }
            if ((this.onEndUploadfileCCFormDelegate == null)) {
                this.onEndUploadfileCCFormDelegate = new EndOperationDelegate(this.OnEndUploadfileCCForm);
            }
            if ((this.onUploadfileCCFormCompletedDelegate == null)) {
                this.onUploadfileCCFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadfileCCFormCompleted);
            }
            base.InvokeAsync(this.onBeginUploadfileCCFormDelegate, new object[] {
                        FileByte,
                        fileName,
                        fk_frmSort}, this.onEndUploadfileCCFormDelegate, this.onUploadfileCCFormCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginCfgKey(string kev, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCfgKey(kev, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndCfgKey(System.IAsyncResult result) {
            return base.Channel.EndCfgKey(result);
        }
        
        private System.IAsyncResult OnBeginCfgKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string kev = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginCfgKey(kev, callback, asyncState);
        }
        
        private object[] OnEndCfgKey(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndCfgKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCfgKeyCompleted(object state) {
            if ((this.CfgKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CfgKeyCompleted(this, new CfgKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CfgKeyAsync(string kev) {
            this.CfgKeyAsync(kev, null);
        }
        
        public void CfgKeyAsync(string kev, object userState) {
            if ((this.onBeginCfgKeyDelegate == null)) {
                this.onBeginCfgKeyDelegate = new BeginOperationDelegate(this.OnBeginCfgKey);
            }
            if ((this.onEndCfgKeyDelegate == null)) {
                this.onEndCfgKeyDelegate = new EndOperationDelegate(this.OnEndCfgKey);
            }
            if ((this.onCfgKeyCompletedDelegate == null)) {
                this.onCfgKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCfgKeyCompleted);
            }
            base.InvokeAsync(this.onBeginCfgKeyDelegate, new object[] {
                        kev}, this.onEndCfgKeyDelegate, this.onCfgKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginUploadFile1(WF.WS.UploadFileRequest1 request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile1(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadFile1(byte[] FileByte, string fileName, System.AsyncCallback callback, object asyncState) {
            WF.WS.UploadFileRequest1 inValue = new WF.WS.UploadFileRequest1();
            inValue.FileByte = FileByte;
            inValue.fileName = fileName;
            return ((WF.WS.WSDesignerSoap)(this)).BeginUploadFile1(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WF.WS.UploadFileResponse1 WF.WS.WSDesignerSoap.EndUploadFile1(System.IAsyncResult result) {
            return base.Channel.EndUploadFile1(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadFile1(System.IAsyncResult result) {
            WF.WS.UploadFileResponse1 retVal = ((WF.WS.WSDesignerSoap)(this)).EndUploadFile1(result);
            return retVal.UploadFileResult;
        }
        
        private System.IAsyncResult OnBeginUploadFile1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileByte = ((byte[])(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return this.BeginUploadFile1(FileByte, fileName, callback, asyncState);
        }
        
        private object[] OnEndUploadFile1(System.IAsyncResult result) {
            string retVal = this.EndUploadFile1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadFile1Completed(object state) {
            if ((this.UploadFile1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFile1Completed(this, new UploadFile1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFile1Async(byte[] FileByte, string fileName) {
            this.UploadFile1Async(FileByte, fileName, null);
        }
        
        public void UploadFile1Async(byte[] FileByte, string fileName, object userState) {
            if ((this.onBeginUploadFile1Delegate == null)) {
                this.onBeginUploadFile1Delegate = new BeginOperationDelegate(this.OnBeginUploadFile1);
            }
            if ((this.onEndUploadFile1Delegate == null)) {
                this.onEndUploadFile1Delegate = new EndOperationDelegate(this.OnEndUploadFile1);
            }
            if ((this.onUploadFile1CompletedDelegate == null)) {
                this.onUploadFile1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFile1Completed);
            }
            base.InvokeAsync(this.onBeginUploadFile1Delegate, new object[] {
                        FileByte,
                        fileName}, this.onEndUploadFile1Delegate, this.onUploadFile1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQL(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WF.WS.WSDesignerSoap.EndRunSQL(System.IAsyncResult result) {
            return base.Channel.EndRunSQL(result);
        }
        
        private System.IAsyncResult OnBeginRunSQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRunSQL(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQL(System.IAsyncResult result) {
            int retVal = ((WF.WS.WSDesignerSoap)(this)).EndRunSQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLCompleted(object state) {
            if ((this.RunSQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLCompleted(this, new RunSQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLAsync(string sql) {
            this.RunSQLAsync(sql, null);
        }
        
        public void RunSQLAsync(string sql, object userState) {
            if ((this.onBeginRunSQLDelegate == null)) {
                this.onBeginRunSQLDelegate = new BeginOperationDelegate(this.OnBeginRunSQL);
            }
            if ((this.onEndRunSQLDelegate == null)) {
                this.onEndRunSQLDelegate = new EndOperationDelegate(this.OnEndRunSQL);
            }
            if ((this.onRunSQLCompletedDelegate == null)) {
                this.onRunSQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLDelegate, new object[] {
                        sql}, this.onEndRunSQLDelegate, this.onRunSQLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRunSQLs(string sqls, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLs(sqls, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WF.WS.WSDesignerSoap.EndRunSQLs(System.IAsyncResult result) {
            return base.Channel.EndRunSQLs(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqls = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRunSQLs(sqls, callback, asyncState);
        }
        
        private object[] OnEndRunSQLs(System.IAsyncResult result) {
            int retVal = ((WF.WS.WSDesignerSoap)(this)).EndRunSQLs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLsCompleted(object state) {
            if ((this.RunSQLsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLsCompleted(this, new RunSQLsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLsAsync(string sqls) {
            this.RunSQLsAsync(sqls, null);
        }
        
        public void RunSQLsAsync(string sqls, object userState) {
            if ((this.onBeginRunSQLsDelegate == null)) {
                this.onBeginRunSQLsDelegate = new BeginOperationDelegate(this.OnBeginRunSQLs);
            }
            if ((this.onEndRunSQLsDelegate == null)) {
                this.onEndRunSQLsDelegate = new EndOperationDelegate(this.OnEndRunSQLs);
            }
            if ((this.onRunSQLsCompletedDelegate == null)) {
                this.onRunSQLsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLsCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLsDelegate, new object[] {
                        sqls}, this.onEndRunSQLsDelegate, this.onRunSQLsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEn(vals, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndSaveEn(System.IAsyncResult result) {
            return base.Channel.EndSaveEn(result);
        }
        
        private System.IAsyncResult OnBeginSaveEn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vals = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginSaveEn(vals, callback, asyncState);
        }
        
        private object[] OnEndSaveEn(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndSaveEn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnCompleted(object state) {
            if ((this.SaveEnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnCompleted(this, new SaveEnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnAsync(string vals) {
            this.SaveEnAsync(vals, null);
        }
        
        public void SaveEnAsync(string vals, object userState) {
            if ((this.onBeginSaveEnDelegate == null)) {
                this.onBeginSaveEnDelegate = new BeginOperationDelegate(this.OnBeginSaveEn);
            }
            if ((this.onEndSaveEnDelegate == null)) {
                this.onEndSaveEnDelegate = new EndOperationDelegate(this.OnEndSaveEn);
            }
            if ((this.onSaveEnCompletedDelegate == null)) {
                this.onSaveEnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnDelegate, new object[] {
                        vals}, this.onEndSaveEnDelegate, this.onSaveEnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTable(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndRunSQLReturnTable(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTable(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRunSQLReturnTable(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTable(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndRunSQLReturnTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableCompleted(object state) {
            if ((this.RunSQLReturnTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableCompleted(this, new RunSQLReturnTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableAsync(string sql) {
            this.RunSQLReturnTableAsync(sql, null);
        }
        
        public void RunSQLReturnTableAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnTableDelegate == null)) {
                this.onBeginRunSQLReturnTableDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTable);
            }
            if ((this.onEndRunSQLReturnTableDelegate == null)) {
                this.onEndRunSQLReturnTableDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTable);
            }
            if ((this.onRunSQLReturnTableCompletedDelegate == null)) {
                this.onRunSQLReturnTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnTableDelegate, this.onRunSQLReturnTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRunSQLReturnString(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnString(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndRunSQLReturnString(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnString(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRunSQLReturnString(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnString(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndRunSQLReturnString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnStringCompleted(object state) {
            if ((this.RunSQLReturnStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnStringCompleted(this, new RunSQLReturnStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnStringAsync(string sql) {
            this.RunSQLReturnStringAsync(sql, null);
        }
        
        public void RunSQLReturnStringAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnStringDelegate == null)) {
                this.onBeginRunSQLReturnStringDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnString);
            }
            if ((this.onEndRunSQLReturnStringDelegate == null)) {
                this.onEndRunSQLReturnStringDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnString);
            }
            if ((this.onRunSQLReturnStringCompletedDelegate == null)) {
                this.onRunSQLReturnStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnStringCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnStringDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnStringDelegate, this.onRunSQLReturnStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRunSQLReturnValInt(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnValInt(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WF.WS.WSDesignerSoap.EndRunSQLReturnValInt(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnValInt(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnValInt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRunSQLReturnValInt(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnValInt(System.IAsyncResult result) {
            int retVal = ((WF.WS.WSDesignerSoap)(this)).EndRunSQLReturnValInt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnValIntCompleted(object state) {
            if ((this.RunSQLReturnValIntCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnValIntCompleted(this, new RunSQLReturnValIntCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnValIntAsync(string sql) {
            this.RunSQLReturnValIntAsync(sql, null);
        }
        
        public void RunSQLReturnValIntAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnValIntDelegate == null)) {
                this.onBeginRunSQLReturnValIntDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnValInt);
            }
            if ((this.onEndRunSQLReturnValIntDelegate == null)) {
                this.onEndRunSQLReturnValIntDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnValInt);
            }
            if ((this.onRunSQLReturnValIntCompletedDelegate == null)) {
                this.onRunSQLReturnValIntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnValIntCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnValIntDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnValIntDelegate, this.onRunSQLReturnValIntCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRunSQLReturnValFloat(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnValFloat(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        float WF.WS.WSDesignerSoap.EndRunSQLReturnValFloat(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnValFloat(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnValFloat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRunSQLReturnValFloat(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnValFloat(System.IAsyncResult result) {
            float retVal = ((WF.WS.WSDesignerSoap)(this)).EndRunSQLReturnValFloat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnValFloatCompleted(object state) {
            if ((this.RunSQLReturnValFloatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnValFloatCompleted(this, new RunSQLReturnValFloatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnValFloatAsync(string sql) {
            this.RunSQLReturnValFloatAsync(sql, null);
        }
        
        public void RunSQLReturnValFloatAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnValFloatDelegate == null)) {
                this.onBeginRunSQLReturnValFloatDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnValFloat);
            }
            if ((this.onEndRunSQLReturnValFloatDelegate == null)) {
                this.onEndRunSQLReturnValFloatDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnValFloat);
            }
            if ((this.onRunSQLReturnValFloatCompletedDelegate == null)) {
                this.onRunSQLReturnValFloatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnValFloatCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnValFloatDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnValFloatDelegate, this.onRunSQLReturnValFloatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRunSQLReturnTableS(string sqls, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTableS(sqls, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndRunSQLReturnTableS(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTableS(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTableS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqls = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRunSQLReturnTableS(sqls, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTableS(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndRunSQLReturnTableS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableSCompleted(object state) {
            if ((this.RunSQLReturnTableSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableSCompleted(this, new RunSQLReturnTableSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableSAsync(string sqls) {
            this.RunSQLReturnTableSAsync(sqls, null);
        }
        
        public void RunSQLReturnTableSAsync(string sqls, object userState) {
            if ((this.onBeginRunSQLReturnTableSDelegate == null)) {
                this.onBeginRunSQLReturnTableSDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTableS);
            }
            if ((this.onEndRunSQLReturnTableSDelegate == null)) {
                this.onEndRunSQLReturnTableSDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTableS);
            }
            if ((this.onRunSQLReturnTableSCompletedDelegate == null)) {
                this.onRunSQLReturnTableSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableSCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableSDelegate, new object[] {
                        sqls}, this.onEndRunSQLReturnTableSDelegate, this.onRunSQLReturnTableSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginParseStringToPinyin(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseStringToPinyin(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndParseStringToPinyin(System.IAsyncResult result) {
            return base.Channel.EndParseStringToPinyin(result);
        }
        
        private System.IAsyncResult OnBeginParseStringToPinyin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginParseStringToPinyin(name, callback, asyncState);
        }
        
        private object[] OnEndParseStringToPinyin(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndParseStringToPinyin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseStringToPinyinCompleted(object state) {
            if ((this.ParseStringToPinyinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseStringToPinyinCompleted(this, new ParseStringToPinyinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseStringToPinyinAsync(string name) {
            this.ParseStringToPinyinAsync(name, null);
        }
        
        public void ParseStringToPinyinAsync(string name, object userState) {
            if ((this.onBeginParseStringToPinyinDelegate == null)) {
                this.onBeginParseStringToPinyinDelegate = new BeginOperationDelegate(this.OnBeginParseStringToPinyin);
            }
            if ((this.onEndParseStringToPinyinDelegate == null)) {
                this.onEndParseStringToPinyinDelegate = new EndOperationDelegate(this.OnEndParseStringToPinyin);
            }
            if ((this.onParseStringToPinyinCompletedDelegate == null)) {
                this.onParseStringToPinyinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseStringToPinyinCompleted);
            }
            base.InvokeAsync(this.onBeginParseStringToPinyinDelegate, new object[] {
                        name}, this.onEndParseStringToPinyinDelegate, this.onParseStringToPinyinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginRequestSFTable(string ensName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestSFTable(ensName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndRequestSFTable(System.IAsyncResult result) {
            return base.Channel.EndRequestSFTable(result);
        }
        
        private System.IAsyncResult OnBeginRequestSFTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ensName = ((string)(inValues[0]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginRequestSFTable(ensName, callback, asyncState);
        }
        
        private object[] OnEndRequestSFTable(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndRequestSFTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestSFTableCompleted(object state) {
            if ((this.RequestSFTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestSFTableCompleted(this, new RequestSFTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestSFTableAsync(string ensName) {
            this.RequestSFTableAsync(ensName, null);
        }
        
        public void RequestSFTableAsync(string ensName, object userState) {
            if ((this.onBeginRequestSFTableDelegate == null)) {
                this.onBeginRequestSFTableDelegate = new BeginOperationDelegate(this.OnBeginRequestSFTable);
            }
            if ((this.onEndRequestSFTableDelegate == null)) {
                this.onEndRequestSFTableDelegate = new EndOperationDelegate(this.OnEndRequestSFTable);
            }
            if ((this.onRequestSFTableCompletedDelegate == null)) {
                this.onRequestSFTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestSFTableCompleted);
            }
            base.InvokeAsync(this.onBeginRequestSFTableDelegate, new object[] {
                        ensName}, this.onEndRequestSFTableDelegate, this.onRequestSFTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.WS.WSDesignerSoap.BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEnum(enumKey, enumLab, cfg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.WS.WSDesignerSoap.EndSaveEnum(System.IAsyncResult result) {
            return base.Channel.EndSaveEnum(result);
        }
        
        private System.IAsyncResult OnBeginSaveEnum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string enumKey = ((string)(inValues[0]));
            string enumLab = ((string)(inValues[1]));
            string cfg = ((string)(inValues[2]));
            return ((WF.WS.WSDesignerSoap)(this)).BeginSaveEnum(enumKey, enumLab, cfg, callback, asyncState);
        }
        
        private object[] OnEndSaveEnum(System.IAsyncResult result) {
            string retVal = ((WF.WS.WSDesignerSoap)(this)).EndSaveEnum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEnumCompleted(object state) {
            if ((this.SaveEnumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEnumCompleted(this, new SaveEnumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEnumAsync(string enumKey, string enumLab, string cfg) {
            this.SaveEnumAsync(enumKey, enumLab, cfg, null);
        }
        
        public void SaveEnumAsync(string enumKey, string enumLab, string cfg, object userState) {
            if ((this.onBeginSaveEnumDelegate == null)) {
                this.onBeginSaveEnumDelegate = new BeginOperationDelegate(this.OnBeginSaveEnum);
            }
            if ((this.onEndSaveEnumDelegate == null)) {
                this.onEndSaveEnumDelegate = new EndOperationDelegate(this.OnEndSaveEnum);
            }
            if ((this.onSaveEnumCompletedDelegate == null)) {
                this.onSaveEnumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEnumCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEnumDelegate, new object[] {
                        enumKey,
                        enumLab,
                        cfg}, this.onEndSaveEnumDelegate, this.onSaveEnumCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WF.WS.WSDesignerSoap CreateChannel() {
            return new WSDesignerSoapClientChannel(this);
        }
        
        private class WSDesignerSoapClientChannel : ChannelBase<WF.WS.WSDesignerSoap>, WF.WS.WSDesignerSoap {
            
            public WSDesignerSoapClientChannel(System.ServiceModel.ClientBase<WF.WS.WSDesignerSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGenerOrgModel(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GenerOrgModel", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGenerOrgModel(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GenerOrgModel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoType(string doType, string v1, string v2, string v3, string v4, string v5, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = doType;
                _args[1] = v1;
                _args[2] = v2;
                _args[3] = v3;
                _args[4] = v4;
                _args[5] = v5;
                System.IAsyncResult _result = base.BeginInvoke("DoType", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDoType(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DoType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDTOfWorkList(string fk_flow, string workid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fk_flow;
                _args[1] = workid;
                System.IAsyncResult _result = base.BeginInvoke("GetDTOfWorkList", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDTOfWorkList(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDTOfWorkList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLetAdminLogin(string lang, bool islogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = lang;
                _args[1] = islogin;
                System.IAsyncResult _result = base.BeginInvoke("LetAdminLogin", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLetAdminLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LetAdminLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowBySort(string sort, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sort;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowBySort", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetFlowBySort(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetFlowBySort", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStationEmps(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStationEmps", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetStationEmps(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetStationEmps", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDo(string doWhat, string para1, bool isLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = doWhat;
                _args[1] = para1;
                _args[2] = isLogin;
                System.IAsyncResult _result = base.BeginInvoke("Do", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDo(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Do", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoNewNode(string fk_flow, int x, int y, string nodeName, bool isLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = x;
                _args[2] = y;
                _args[3] = nodeName;
                _args[4] = isLogin;
                System.IAsyncResult _result = base.BeginInvoke("DoNewNode", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDoNewNode(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DoNewNode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoDropLine(int from, int to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = from;
                _args[1] = to;
                System.IAsyncResult _result = base.BeginInvoke("DoDropLine", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDoDropLine(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DoDropLine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoNewLabel(string fk_flow, int x, int y, string name, string lableId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = x;
                _args[2] = y;
                _args[3] = name;
                _args[4] = lableId;
                System.IAsyncResult _result = base.BeginInvoke("DoNewLabel", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDoNewLabel(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DoNewLabel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFlowTemplete_Load(string fk_flowSort, string path, bool islogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fk_flowSort;
                _args[1] = path;
                _args[2] = islogin;
                System.IAsyncResult _result = base.BeginInvoke("FlowTemplete_Load", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFlowTemplete_Load(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FlowTemplete_Load", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDirection(string flowid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = flowid;
                System.IAsyncResult _result = base.BeginInvoke("GetDirection", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDirection(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDirection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLables(string flowid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = flowid;
                System.IAsyncResult _result = base.BeginInvoke("GetLables", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLables(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLables", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoSaveFlow(string fk_flow, string nodes, string dirs, string labes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = fk_flow;
                _args[1] = nodes;
                _args[2] = dirs;
                _args[3] = labes;
                System.IAsyncResult _result = base.BeginInvoke("DoSaveFlow", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDoSaveFlow(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DoSaveFlow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadfile(WF.WS.UploadfileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Uploadfile", _args, callback, asyncState);
                return _result;
            }
            
            public WF.WS.UploadfileResponse EndUploadfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                WF.WS.UploadfileResponse _result = ((WF.WS.UploadfileResponse)(base.EndInvoke("Uploadfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadfileCCForm(WF.WS.UploadfileCCFormRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadfileCCForm", _args, callback, asyncState);
                return _result;
            }
            
            public WF.WS.UploadfileCCFormResponse EndUploadfileCCForm(System.IAsyncResult result) {
                object[] _args = new object[0];
                WF.WS.UploadfileCCFormResponse _result = ((WF.WS.UploadfileCCFormResponse)(base.EndInvoke("UploadfileCCForm", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCfgKey(string kev, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = kev;
                System.IAsyncResult _result = base.BeginInvoke("CfgKey", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCfgKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CfgKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile1(WF.WS.UploadFileRequest1 request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile1", _args, callback, asyncState);
                return _result;
            }
            
            public WF.WS.UploadFileResponse1 EndUploadFile1(System.IAsyncResult result) {
                object[] _args = new object[0];
                WF.WS.UploadFileResponse1 _result = ((WF.WS.UploadFileResponse1)(base.EndInvoke("UploadFile1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQL", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQL(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLs(string sqls, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sqls;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLs", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQLs(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQLs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEn(string vals, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vals;
                System.IAsyncResult _result = base.BeginInvoke("SaveEn", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEn(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnString(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnString", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnValInt(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnValInt", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQLReturnValInt(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQLReturnValInt", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnValFloat(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnValFloat", _args, callback, asyncState);
                return _result;
            }
            
            public float EndRunSQLReturnValFloat(System.IAsyncResult result) {
                object[] _args = new object[0];
                float _result = ((float)(base.EndInvoke("RunSQLReturnValFloat", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTableS(string sqls, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sqls;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTableS", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnTableS(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnTableS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginParseStringToPinyin(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("ParseStringToPinyin", _args, callback, asyncState);
                return _result;
            }
            
            public string EndParseStringToPinyin(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ParseStringToPinyin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRequestSFTable(string ensName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ensName;
                System.IAsyncResult _result = base.BeginInvoke("RequestSFTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRequestSFTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RequestSFTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEnum(string enumKey, string enumLab, string cfg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = enumKey;
                _args[1] = enumLab;
                _args[2] = cfg;
                System.IAsyncResult _result = base.BeginInvoke("SaveEnum", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveEnum(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveEnum", _args, result)));
                return _result;
            }
        }
    }
}
