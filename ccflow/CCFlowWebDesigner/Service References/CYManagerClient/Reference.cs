//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.235
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WF.CYManagerClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CYManagerClient.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCheckUser(string userName, string pass, System.AsyncCallback callback, object asyncState);
        
        string EndCheckUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RegUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRegUser(string userName, string password, string email, System.AsyncCallback callback, object asyncState);
        
        string EndRegUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : WF.CYManagerClient.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<WF.CYManagerClient.WebServiceSoap>, WF.CYManagerClient.WebServiceSoap {
        
        private BeginOperationDelegate onBeginCheckUserDelegate;
        
        private EndOperationDelegate onEndCheckUserDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegUserDelegate;
        
        private EndOperationDelegate onEndRegUserDelegate;
        
        private System.Threading.SendOrPostCallback onRegUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<CheckUserCompletedEventArgs> CheckUserCompleted;
        
        public event System.EventHandler<RegUserCompletedEventArgs> RegUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.CYManagerClient.WebServiceSoap.BeginCheckUser(string userName, string pass, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUser(userName, pass, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.CYManagerClient.WebServiceSoap.EndCheckUser(System.IAsyncResult result) {
            return base.Channel.EndCheckUser(result);
        }
        
        private System.IAsyncResult OnBeginCheckUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string pass = ((string)(inValues[1]));
            return ((WF.CYManagerClient.WebServiceSoap)(this)).BeginCheckUser(userName, pass, callback, asyncState);
        }
        
        private object[] OnEndCheckUser(System.IAsyncResult result) {
            string retVal = ((WF.CYManagerClient.WebServiceSoap)(this)).EndCheckUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserCompleted(object state) {
            if ((this.CheckUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserAsync(string userName, string pass) {
            this.CheckUserAsync(userName, pass, null);
        }
        
        public void CheckUserAsync(string userName, string pass, object userState) {
            if ((this.onBeginCheckUserDelegate == null)) {
                this.onBeginCheckUserDelegate = new BeginOperationDelegate(this.OnBeginCheckUser);
            }
            if ((this.onEndCheckUserDelegate == null)) {
                this.onEndCheckUserDelegate = new EndOperationDelegate(this.OnEndCheckUser);
            }
            if ((this.onCheckUserCompletedDelegate == null)) {
                this.onCheckUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUserDelegate, new object[] {
                        userName,
                        pass}, this.onEndCheckUserDelegate, this.onCheckUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.CYManagerClient.WebServiceSoap.BeginRegUser(string userName, string password, string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegUser(userName, password, email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.CYManagerClient.WebServiceSoap.EndRegUser(System.IAsyncResult result) {
            return base.Channel.EndRegUser(result);
        }
        
        private System.IAsyncResult OnBeginRegUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string email = ((string)(inValues[2]));
            return ((WF.CYManagerClient.WebServiceSoap)(this)).BeginRegUser(userName, password, email, callback, asyncState);
        }
        
        private object[] OnEndRegUser(System.IAsyncResult result) {
            string retVal = ((WF.CYManagerClient.WebServiceSoap)(this)).EndRegUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegUserCompleted(object state) {
            if ((this.RegUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegUserCompleted(this, new RegUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegUserAsync(string userName, string password, string email) {
            this.RegUserAsync(userName, password, email, null);
        }
        
        public void RegUserAsync(string userName, string password, string email, object userState) {
            if ((this.onBeginRegUserDelegate == null)) {
                this.onBeginRegUserDelegate = new BeginOperationDelegate(this.OnBeginRegUser);
            }
            if ((this.onEndRegUserDelegate == null)) {
                this.onEndRegUserDelegate = new EndOperationDelegate(this.OnEndRegUser);
            }
            if ((this.onRegUserCompletedDelegate == null)) {
                this.onRegUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegUserCompleted);
            }
            base.InvokeAsync(this.onBeginRegUserDelegate, new object[] {
                        userName,
                        password,
                        email}, this.onEndRegUserDelegate, this.onRegUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WF.CYManagerClient.WebServiceSoap CreateChannel() {
            return new WebServiceSoapClientChannel(this);
        }
        
        private class WebServiceSoapClientChannel : ChannelBase<WF.CYManagerClient.WebServiceSoap>, WF.CYManagerClient.WebServiceSoap {
            
            public WebServiceSoapClientChannel(System.ServiceModel.ClientBase<WF.CYManagerClient.WebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCheckUser(string userName, string pass, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = pass;
                System.IAsyncResult _result = base.BeginInvoke("CheckUser", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCheckUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CheckUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegUser(string userName, string password, string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = password;
                _args[2] = email;
                System.IAsyncResult _result = base.BeginInvoke("RegUser", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRegUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RegUser", _args, result)));
                return _result;
            }
        }
    }
}
