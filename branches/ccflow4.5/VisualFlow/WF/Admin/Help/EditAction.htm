 
	
        <b>
            <br />
            工作流引擎为每个节点提供如4个事件：</b>
        <hr/>
        <ul>
            <li>当节点保存时。</li><li>当节点发送前。</li><li>当节点发送成功后。</li><li>当节点发送失败后。</li></ul>
        <p>
        </p>
        <p>
            &nbsp; &nbsp;&nbsp; &nbsp;这4个事件您可以用来处理用户特殊的需求。在各个事件里您都可以抛出异常到给用户，或者处理复杂的、个性化的业务逻辑。
            &nbsp;比如在<strong>节点保存时事件</strong>中，你可以获取外部系统数据，填写当前节点的表单，可以检查用户输入是否符合标准与完整。
            在<strong>节点发送时</strong>，您可以检查一下是否符合发送的条件。在<strong>节点发送成功后</strong>，您可以为下一个节点设置默认信息。在<strong>节点发送失败后</strong>，你可以撤消一些操作。</p>
        <p>
            <b>工作流引擎为您提供两种模式的数据接口</b>
        </p>
        <hr />
        <ul>
            <li>存储过程模式。</li>
            <li>类库模式。</li>
        </ul>
        <p>
            <strong>&nbsp; &nbsp; 存储过程模式</strong><br />
            &nbsp; &nbsp; 用户按照约定的规则编写存储过程，放在当前的数据库中，流程在运行期间会自动调用这些存储过程。比如：当节点保存时调用 "ND"+节点编号+"WhenSave".
            这个名称存储过程。比如当前节点编号是0901, 在这个节点保存时系统会调用<strong>ND0901_WhenSave</strong>这个存储过程。约定规则如下：</p>
            
            
        <li>当节点保存时，存储过程名称："ND"+节点编号+"WhenSave"。</li>
        <li>当节点发送前时，存储过程名称："ND"+节点编号+"WhenSend"。</li>
        <li>当节点发送成功后时，存储过程名称："ND"+节点编号+"WhenSendOK"。</li>
        <li>当节点发送失败后时，存储过程名称："ND"+节点编号+"WhenSendError"。&nbsp;<br />
            <br />
            &nbsp; &nbsp;&nbsp; 以上存储过程接受2个参数，<br />
            &nbsp; &nbsp;&nbsp; 1,WorkID , 当前工作节点的ID &nbsp; Int64类型。 &nbsp;&nbsp;
            <br />
            &nbsp; &nbsp;&nbsp; 2, WorkPara 工作属性。格式为@字段1=字段值1@字段n=字段值n 当前工作节点的所有字段值。&nbsp;<br />
            <strong> 类库模式：<br />
            </strong> 开发人员建立一个类库，编译出的DLL，符合BP.*.DLL 格式。新建类从BP.WF.WorkAction
            上继承下来。重写如下个几个方法。<ul>
            <li>WhenSave()</li>
            <li>WhenSend()</li>
            <li>WhenSendOK()</li>
            <li>WhenSendError()<br />
                <br />
                在子类里，您可以重写这4个方法，实现您的业务逻辑。 &nbsp; &nbsp; </li>
        </ul>
        <b>两个模式的优缺点？
        </b>
        <hr />
        <p>
            &nbsp; &nbsp;&nbsp; <strong>类库模式开发</strong>方便，不过需要便宜才能执行，需要二次开发人员熟悉 .net 开发工具与环境。<br />
            &nbsp; &nbsp;&nbsp;<strong> 存储过程模式</strong>，简单需要开发人员熟悉存储过程的编。在测试服务器上弄好后要发布。</p>
        <p>
            &nbsp;</p>
        <p>
            &nbsp;</p>
        
         
	</li>
         